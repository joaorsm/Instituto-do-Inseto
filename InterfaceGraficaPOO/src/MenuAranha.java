//João Roberto Savini Merante RA 1886525

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Joao
 */
public class MenuAranha extends javax.swing.JFrame {

    private Aranha aranha = new Aranha();
    private BancoAranha bancoAranha = new BancoAranha();

    /**
     * Creates new form MenuAranha
     */
    public MenuAranha() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoAtualizarTabela = new javax.swing.JButton();
        botaoConsultar = new javax.swing.JButton();
        botaoAlterar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAranha = new javax.swing.JTable();
        botaoSalvar = new javax.swing.JButton();
        rotuloId = new javax.swing.JLabel();
        caixaId = new javax.swing.JTextField();
        rotuloOlhos = new javax.swing.JLabel();
        caixaOlhos = new javax.swing.JTextField();
        rotuloPeconhento = new javax.swing.JLabel();
        caixaPeconhento = new javax.swing.JTextField();
        rotuloEspecie = new javax.swing.JLabel();
        caixaEspecie = new javax.swing.JTextField();
        rotuloCor = new javax.swing.JLabel();
        caixaCor = new javax.swing.JTextField();
        rotuloPais = new javax.swing.JLabel();
        caixaPais = new javax.swing.JTextField();
        rotuloEstado = new javax.swing.JLabel();
        caixaEstado = new javax.swing.JTextField();
        rotuloTeia = new javax.swing.JLabel();
        caixaTeia = new javax.swing.JTextField();
        rotuloSubOrdem = new javax.swing.JLabel();
        caixaSubOrdem = new javax.swing.JTextField();
        rotuloVeneno = new javax.swing.JLabel();
        caixaVeneno = new javax.swing.JTextField();
        botaoLimpar = new javax.swing.JButton();
        botaoInserir = new javax.swing.JButton();
        botaoAbrirTabela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(300, 250));

        botaoAtualizarTabela.setText("Atualizar Tabela");
        botaoAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarTabelaActionPerformed(evt);
            }
        });

        botaoConsultar.setText("Consultar ID");
        botaoConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsultarActionPerformed(evt);
            }
        });

        botaoAlterar.setText("Alterar ID");
        botaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarActionPerformed(evt);
            }
        });

        botaoExcluir.setText("Excluir ID");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        tableAranha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Especie", "Sub Ordem", "Qtd Olhos", "Cor", "País", "Estado", "Teia", "Peçonhento", "Veneno", "Pernas"
            }
        ));
        tableAranha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAranhaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAranha);
        if (tableAranha.getColumnModel().getColumnCount() > 0) {
            tableAranha.getColumnModel().getColumn(0).setMaxWidth(50);
            tableAranha.getColumnModel().getColumn(2).setMinWidth(100);
            tableAranha.getColumnModel().getColumn(10).setMaxWidth(55);
        }

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        rotuloId.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        rotuloId.setText("ID:");

        rotuloOlhos.setText("Quantidade de Olhos:");

        rotuloPeconhento.setText("Peçonhento (true or false):");

        rotuloEspecie.setText("Especie:");

        rotuloCor.setText("Cor:");

        rotuloPais.setText("País");

        rotuloEstado.setText("Estado:");

        rotuloTeia.setText("Teia:");

        rotuloSubOrdem.setText("Sub Ordem");

        rotuloVeneno.setText("Veneno:");

        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoInserir.setText("Inserir");
        botaoInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoInserirActionPerformed(evt);
            }
        });

        botaoAbrirTabela.setText("Abrir Tabela");
        botaoAbrirTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAbrirTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botaoAtualizarTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(botaoAbrirTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(382, 382, 382)
                                .addComponent(botaoVoltar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(botaoConsultar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addComponent(botaoAlterar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(botaoExcluir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(botaoInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(rotuloCor, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloPais, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloTeia, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloVeneno, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(rotuloOlhos, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(rotuloSubOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(caixaCor)
                                                        .addComponent(caixaEspecie)
                                                        .addComponent(caixaOlhos)
                                                        .addComponent(caixaPais)
                                                        .addComponent(caixaEstado)
                                                        .addComponent(caixaTeia)
                                                        .addComponent(caixaVeneno, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(caixaId, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(caixaSubOrdem)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(rotuloPeconhento, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(caixaPeconhento, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(194, 194, 194))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(31, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoLimpar)
                            .addComponent(caixaId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caixaOlhos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloOlhos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaSubOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloSubOrdem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloEspecie))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloCor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloPais))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloEstado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caixaTeia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotuloTeia)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoInserir)
                            .addComponent(rotuloId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoExcluir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaPeconhento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotuloPeconhento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaVeneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotuloVeneno)
                    .addComponent(botaoSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoVoltar)
                    .addComponent(botaoAtualizarTabela)
                    .addComponent(botaoAbrirTabela))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarTabelaActionPerformed
        showTableAranha(bancoAranha);
    }//GEN-LAST:event_botaoAtualizarTabelaActionPerformed

    public void showTableAranha(BancoAranha bancoAranha) {
        aranha = new Aranha();
        DefaultTableModel modeloTabelaAranha = new DefaultTableModel();
        modeloTabelaAranha = (DefaultTableModel) tableAranha.getModel();
        modeloTabelaAranha.setRowCount(0);

        for (int i = 0; i < bancoAranha.getBdAranha().size(); i++) {
            try {
                aranha.setId(bancoAranha.getBdAranha().get(i).getId());
                aranha.setQuantidadeOlhos(bancoAranha.getBdAranha().get(i).getQuantidadeOlhos());
                aranha.setPeconhento(bancoAranha.getBdAranha().get(i).getPeconhento());
                aranha.setEspecie(bancoAranha.getBdAranha().get(i).getEspecie());
                aranha.setCor(bancoAranha.getBdAranha().get(i).getCor());
                aranha.getRegiao().setPais(bancoAranha.getBdAranha().get(i).getRegiao().getPais());
                aranha.getRegiao().setEstado(bancoAranha.getBdAranha().get(i).getRegiao().getEstado());
                aranha.setTeia(bancoAranha.getBdAranha().get(i).getTeia());
                aranha.setSubOrdem(bancoAranha.getBdAranha().get(i).getSubOrdem());
                aranha.setVeneno(bancoAranha.getBdAranha().get(i).getVeneno());
                aranha.setPernas(bancoAranha.getBdAranha().get(i).getPernas());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Tipo de não aceito", "Erro no cadastro", JOptionPane.ERROR_MESSAGE);
            } catch (OlhosException oe) {
                oe.avisoOlhos();
            } catch (SubOrdemException soe) {
                soe.avisoSubOrdem();
            }

            modeloTabelaAranha.insertRow(i, new Object[]{aranha.getId(), aranha.getEspecie(),
                aranha.getSubOrdem(), aranha.getQuantidadeOlhos(), aranha.getCor(),
                aranha.getRegiao().getPais(), aranha.getRegiao().getEstado(), aranha.getTeia(),
                aranha.getPeconhento(), aranha.getVeneno(), aranha.getPernas()});
        }
    }

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsultarActionPerformed
        consultarAranhaCodigo();
    }//GEN-LAST:event_botaoConsultarActionPerformed

    public void consultarAranhaCodigo() {
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                caixaId.setText(Integer.toString(aranha.getId()));
                caixaOlhos.setText(Integer.toString(aranha.getQuantidadeOlhos()));
                caixaPeconhento.setText(Boolean.toString(aranha.getPeconhento()));
                caixaEspecie.setText(aranha.getEspecie());
                caixaCor.setText(aranha.getCor());
                caixaPais.setText(aranha.getRegiao().getPais());
                caixaEstado.setText(aranha.getRegiao().getEstado());
                caixaTeia.setText(Boolean.toString(aranha.getTeia()));
                caixaSubOrdem.setText(aranha.getSubOrdem());
                caixaVeneno.setText(aranha.getVeneno());
                if (aranha.getTeia()) {
                    aranha.seda(aranha.getTeia());
                } else {
                    aranha.seda(aranha.getTeia());
                    aranha.seda();
                }
                aranha.cacar();
                if (aranha.getPeconhento()) {
                    aranha.peconhento(aranha.getVeneno());
                }
            } else {
                JOptionPane.showMessageDialog(null, " Não existe uma aranha com este ID!", "Erro ao consultar", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O ID deve ser um inteiro!", "Erro de ID", JOptionPane.ERROR_MESSAGE);
            caixaId.setText("");
            caixaId.requestFocus();
        }
    }

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        excluirAranhaCodigo();
    }//GEN-LAST:event_botaoExcluirActionPerformed

    public void excluirAranhaCodigo() {
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                caixaId.setText(Integer.toString(aranha.getId()));
                caixaOlhos.setText(Integer.toString(aranha.getQuantidadeOlhos()));
                caixaPeconhento.setText(Boolean.toString(aranha.getPeconhento()));
                caixaEspecie.setText(aranha.getEspecie());
                caixaCor.setText(aranha.getCor());
                caixaPais.setText(aranha.getRegiao().getPais());
                caixaEstado.setText(aranha.getRegiao().getEstado());
                caixaTeia.setText(Boolean.toString(aranha.getTeia()));
                caixaSubOrdem.setText(aranha.getSubOrdem());
                caixaVeneno.setText(aranha.getVeneno());
                int resp = JOptionPane.showConfirmDialog(null, "Confirmar exclusão?", "Excluir", JOptionPane.YES_NO_CANCEL_OPTION);
                if (resp == 0) {
                    bancoAranha.excluirAranha(aranha);
                    JOptionPane.showMessageDialog(null, "Aranha excluída", "Exclusão", 1);
                    caixaId.setText("");
                    caixaId.setText("");
                    caixaOlhos.setText("");
                    caixaPeconhento.setText("");
                    caixaEspecie.setText("");
                    caixaCor.setText("");
                    caixaPais.setText("");
                    caixaEstado.setText("");
                    caixaTeia.setText("");
                    caixaSubOrdem.setText("");
                    caixaVeneno.setText("");
                    caixaId.requestFocus();
                } else {
                    caixaId.setText("");
                    caixaId.setText("");
                    caixaOlhos.setText("");
                    caixaPeconhento.setText("");
                    caixaEspecie.setText("");
                    caixaCor.setText("");
                    caixaPais.setText("");
                    caixaEstado.setText("");
                    caixaTeia.setText("");
                    caixaSubOrdem.setText("");
                    caixaVeneno.setText("");
                    caixaId.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, " Não existe uma aranha com este ID!", "Erro de Consulta", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O ID deve ser um inteiro!", "Erro de ID", JOptionPane.ERROR_MESSAGE);
            caixaId.setText("");
            caixaId.requestFocus();
        }
    }

    private void botaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarActionPerformed
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                new AlteraAranha().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Não existe uma aranha com este código!", "Erro", 1);
                caixaId.setText("");
                caixaId.setText("");
                caixaOlhos.setText("");
                caixaPeconhento.setText("");
                caixaEspecie.setText("");
                caixaCor.setText("");
                caixaPais.setText("");
                caixaEstado.setText("");
                caixaTeia.setText("");
                caixaSubOrdem.setText("");
                caixaVeneno.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O valor deve ser inteiro", "Erro", 1);
            caixaId.setText("");
            caixaId.setText("");
            caixaOlhos.setText("");
            caixaPeconhento.setText("");
            caixaEspecie.setText("");
            caixaCor.setText("");
            caixaPais.setText("");
            caixaEstado.setText("");
            caixaTeia.setText("");
            caixaSubOrdem.setText("");
            caixaVeneno.setText("");
            caixaId.requestFocus();
        }
    }//GEN-LAST:event_botaoAlterarActionPerformed

    private void botaoInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoInserirActionPerformed
        new CadastroAranha().setVisible(true);
    }//GEN-LAST:event_botaoInserirActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        caixaId.setText("");
        caixaId.setText("");
        caixaOlhos.setText("");
        caixaPeconhento.setText("");
        caixaEspecie.setText("");
        caixaCor.setText("");
        caixaPais.setText("");
        caixaEstado.setText("");
        caixaTeia.setText("");
        caixaSubOrdem.setText("");
        caixaVeneno.setText("");
        caixaId.requestFocus();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void salvar() {
        aranha = new Aranha();

        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha.setQuantidadeOlhos(Integer.parseInt(caixaOlhos.getText()));
            aranha.setPeconhento(Boolean.parseBoolean(caixaPeconhento.getText()));
            aranha.setEspecie(caixaEspecie.getText());
            aranha.setCor(caixaCor.getText());
            aranha.getRegiao().setPais(caixaPais.getText());
            aranha.getRegiao().setEstado(caixaEstado.getText());
            aranha.setTeia(Boolean.parseBoolean(caixaTeia.getText()));
            aranha.setSubOrdem(caixaSubOrdem.getText());
            if (aranha.getPeconhento()) {
                aranha.setVeneno(caixaVeneno.getText());
            } else if (!aranha.getPeconhento() && !caixaVeneno.getText().equals("")) {
                aranha.peconhento(aranha.getPeconhento());
                caixaVeneno.setText("");
            }
            if (bancoAranha.consultaAranhaCodigo(aranha) == null) {
                bancoAranha.getBdAranha().add(aranha);
                showTableAranha(bancoAranha);
            } else {
                JOptionPane.showMessageDialog(null, "Codigo ja existe", "Erro", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Tipo de dados não aceito", "Erro no cadastro", JOptionPane.ERROR_MESSAGE);
        } catch (OlhosException oe) {
            oe.avisoOlhos();
            caixaOlhos.setText("");
            caixaOlhos.requestFocus();
        } catch (SubOrdemException soe) {
            soe.avisoSubOrdem();
            caixaSubOrdem.setText("");
            caixaSubOrdem.requestFocus();
        }
    }

    private void botaoAbrirTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAbrirTabelaActionPerformed
        new JanelaTabelaAranha().showTableAranha(bancoAranha);
    }//GEN-LAST:event_botaoAbrirTabelaActionPerformed

    private void tableAranhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAranhaMouseClicked
        String componente1 = "";
        int i;
        //int coluna;
        int linha = tableAranha.getSelectedRow();

        for (i = 0; i < tableAranha.getColumnCount(); i++) {
            componente1 += tableAranha.getModel().getValueAt(tableAranha.getSelectedRow(), i).toString();
            if (i < tableAranha.getColumnCount()) {
                componente1 += " - ";
            }
        }
        JOptionPane.showMessageDialog(null, "Aranha: " + componente1, "Aranha selecionada", 1);

    }//GEN-LAST:event_tableAranhaMouseClicked

    public void criarMenuAranha() {
        this.setVisible(true);
        showTableAranha(bancoAranha);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAranha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAbrirTabela;
    private javax.swing.JButton botaoAlterar;
    private javax.swing.JButton botaoAtualizarTabela;
    private javax.swing.JButton botaoConsultar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoInserir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JTextField caixaCor;
    private javax.swing.JTextField caixaEspecie;
    private javax.swing.JTextField caixaEstado;
    private javax.swing.JTextField caixaId;
    private javax.swing.JTextField caixaOlhos;
    private javax.swing.JTextField caixaPais;
    private javax.swing.JTextField caixaPeconhento;
    private javax.swing.JTextField caixaSubOrdem;
    private javax.swing.JTextField caixaTeia;
    private javax.swing.JTextField caixaVeneno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rotuloCor;
    private javax.swing.JLabel rotuloEspecie;
    private javax.swing.JLabel rotuloEstado;
    private javax.swing.JLabel rotuloId;
    private javax.swing.JLabel rotuloOlhos;
    private javax.swing.JLabel rotuloPais;
    private javax.swing.JLabel rotuloPeconhento;
    private javax.swing.JLabel rotuloSubOrdem;
    private javax.swing.JLabel rotuloTeia;
    private javax.swing.JLabel rotuloVeneno;
    private javax.swing.JTable tableAranha;
    // End of variables declaration//GEN-END:variables
}
