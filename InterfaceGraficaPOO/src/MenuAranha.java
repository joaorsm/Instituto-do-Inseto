//João Roberto Savini Merante RA 1886525

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Joao
 */
public class MenuAranha extends javax.swing.JFrame {

    private Aranha aranha = new Aranha();
    private BancoAranha bancoAranha = new BancoAranha();

    /**
     * Creates new form MenuAranha
     */
    public MenuAranha() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoAtualizarTabela = new javax.swing.JButton();
        botaoConsultar = new javax.swing.JButton();
        botaoAlterar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAranha = new javax.swing.JTable();
        botaoSalvar = new javax.swing.JButton();
        rotuloId = new javax.swing.JLabel();
        caixaId = new javax.swing.JTextField();
        rotuloOlhos = new javax.swing.JLabel();
        caixaOlhos = new javax.swing.JTextField();
        rotuloPeconhento = new javax.swing.JLabel();
        caixaPeconhento = new javax.swing.JTextField();
        rotuloEspecie = new javax.swing.JLabel();
        caixaEspecie = new javax.swing.JTextField();
        rotuloCor = new javax.swing.JLabel();
        caixaCor = new javax.swing.JTextField();
        rotuloPais = new javax.swing.JLabel();
        caixaPais = new javax.swing.JTextField();
        rotuloEstado = new javax.swing.JLabel();
        caixaEstado = new javax.swing.JTextField();
        rotuloTeia = new javax.swing.JLabel();
        caixaTeia = new javax.swing.JTextField();
        rotuloSubOrdem = new javax.swing.JLabel();
        caixaSubOrdem = new javax.swing.JTextField();
        rotuloVeneno = new javax.swing.JLabel();
        caixaVeneno = new javax.swing.JTextField();
        botaoLimpar = new javax.swing.JButton();
        botaoInserir = new javax.swing.JButton();
        botaoAbrirTabela = new javax.swing.JButton();
        botaoAbrirLista = new javax.swing.JButton();
        botaoAbrirCombo = new javax.swing.JButton();
        rotuloImageAranha = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        menuInserirAranha = new javax.swing.JMenuItem();
        menuAlterarAranha = new javax.swing.JMenuItem();
        menuTabelaAranha = new javax.swing.JMenuItem();
        menuListaAranha = new javax.swing.JMenuItem();
        menuComboAranha = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Aranha");
        setBounds(new java.awt.Rectangle(0, 0, 797, 495));
        setIconImages(null);
        setLocation(new java.awt.Point(300, 250));
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(null);

        botaoAtualizarTabela.setText("Atualizar Tabela");
        botaoAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarTabelaActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAtualizarTabela);
        botaoAtualizarTabela.setBounds(24, 440, 150, 23);

        botaoConsultar.setText("Consultar ID");
        botaoConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoConsultar);
        botaoConsultar.setBounds(24, 73, 150, 23);

        botaoAlterar.setText("Alterar ID");
        botaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAlterar);
        botaoAlterar.setBounds(24, 102, 150, 23);

        botaoExcluir.setText("Excluir ID");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(botaoExcluir);
        botaoExcluir.setBounds(24, 131, 150, 23);

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoVoltar);
        botaoVoltar.setBounds(710, 440, 63, 23);

        tableAranha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Especie", "Sub Ordem", "Qtd Olhos", "Cor", "País", "Estado", "Teia", "Peçonhento", "Veneno", "Pernas"
            }
        ));
        tableAranha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAranhaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAranha);
        if (tableAranha.getColumnModel().getColumnCount() > 0) {
            tableAranha.getColumnModel().getColumn(0).setMaxWidth(50);
            tableAranha.getColumnModel().getColumn(2).setMinWidth(100);
            tableAranha.getColumnModel().getColumn(10).setMaxWidth(55);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(24, 304, 749, 125);

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoSalvar);
        botaoSalvar.setBounds(497, 275, 100, 23);

        rotuloId.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        rotuloId.setText("ID:");
        getContentPane().add(rotuloId);
        rotuloId.setBounds(192, 47, 136, 15);
        getContentPane().add(caixaId);
        caixaId.setBounds(339, 39, 140, 20);

        rotuloOlhos.setText("Quantidade de Olhos:");
        getContentPane().add(rotuloOlhos);
        rotuloOlhos.setBounds(192, 73, 136, 14);
        getContentPane().add(caixaOlhos);
        caixaOlhos.setBounds(338, 67, 141, 20);

        rotuloPeconhento.setText("Peçonhento (true or false):");
        getContentPane().add(rotuloPeconhento);
        rotuloPeconhento.setBounds(192, 252, 136, 14);
        getContentPane().add(caixaPeconhento);
        caixaPeconhento.setBounds(338, 249, 141, 20);

        rotuloEspecie.setText("Especie:");
        getContentPane().add(rotuloEspecie);
        rotuloEspecie.setBounds(192, 122, 109, 14);
        getContentPane().add(caixaEspecie);
        caixaEspecie.setBounds(338, 119, 141, 20);

        rotuloCor.setText("Cor:");
        getContentPane().add(rotuloCor);
        rotuloCor.setBounds(192, 148, 109, 14);
        getContentPane().add(caixaCor);
        caixaCor.setBounds(338, 145, 141, 20);

        rotuloPais.setText("País");
        getContentPane().add(rotuloPais);
        rotuloPais.setBounds(192, 174, 109, 14);
        getContentPane().add(caixaPais);
        caixaPais.setBounds(338, 171, 141, 20);

        rotuloEstado.setText("Estado:");
        getContentPane().add(rotuloEstado);
        rotuloEstado.setBounds(192, 200, 109, 14);
        getContentPane().add(caixaEstado);
        caixaEstado.setBounds(338, 197, 141, 20);

        rotuloTeia.setText("Teia:");
        getContentPane().add(rotuloTeia);
        rotuloTeia.setBounds(192, 226, 109, 14);
        getContentPane().add(caixaTeia);
        caixaTeia.setBounds(338, 223, 141, 20);

        rotuloSubOrdem.setText("Sub Ordem");
        getContentPane().add(rotuloSubOrdem);
        rotuloSubOrdem.setBounds(192, 96, 109, 14);
        getContentPane().add(caixaSubOrdem);
        caixaSubOrdem.setBounds(338, 93, 141, 20);

        rotuloVeneno.setText("Veneno:");
        getContentPane().add(rotuloVeneno);
        rotuloVeneno.setBounds(192, 279, 109, 14);
        getContentPane().add(caixaVeneno);
        caixaVeneno.setBounds(338, 276, 141, 20);

        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });
        getContentPane().add(botaoLimpar);
        botaoLimpar.setBounds(497, 38, 100, 23);

        botaoInserir.setText("Inserir");
        botaoInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoInserirActionPerformed(evt);
            }
        });
        getContentPane().add(botaoInserir);
        botaoInserir.setBounds(24, 44, 150, 23);

        botaoAbrirTabela.setText("Abrir Tabela");
        botaoAbrirTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAbrirTabelaActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAbrirTabela);
        botaoAbrirTabela.setBounds(192, 440, 143, 23);

        botaoAbrirLista.setText("Abrir Lista");
        botaoAbrirLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAbrirListaActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAbrirLista);
        botaoAbrirLista.setBounds(353, 440, 143, 23);

        botaoAbrirCombo.setText("Abrir Combo Box");
        botaoAbrirCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAbrirComboActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAbrirCombo);
        botaoAbrirCombo.setBounds(514, 440, 143, 23);

        rotuloImageAranha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/resize-1604275468468675388aranhapreta982923563.jpg"))); // NOI18N
        getContentPane().add(rotuloImageAranha);
        rotuloImageAranha.setBounds(49, 172, 100, 100);

        jMenu2.setText("Principal");

        jMenuItem1.setText("Menu Escorpiao");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Aranha");

        menuInserirAranha.setText("Inserir");
        menuInserirAranha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInserirAranhaActionPerformed(evt);
            }
        });
        jMenu1.add(menuInserirAranha);

        menuAlterarAranha.setText("Alterar");
        menuAlterarAranha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAlterarAranhaActionPerformed(evt);
            }
        });
        jMenu1.add(menuAlterarAranha);

        menuTabelaAranha.setText("Abrir Tabela");
        menuTabelaAranha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTabelaAranhaActionPerformed(evt);
            }
        });
        jMenu1.add(menuTabelaAranha);

        menuListaAranha.setText("Abrir Lista");
        menuListaAranha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListaAranhaActionPerformed(evt);
            }
        });
        jMenu1.add(menuListaAranha);

        menuComboAranha.setText("Abrir Combo Box");
        menuComboAranha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComboAranhaActionPerformed(evt);
            }
        });
        jMenu1.add(menuComboAranha);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(805, 522));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarTabelaActionPerformed
        showTableAranha(bancoAranha);
    }//GEN-LAST:event_botaoAtualizarTabelaActionPerformed

    public void showTableAranha(BancoAranha bancoAranha) {
        aranha = new Aranha();
        DefaultTableModel modeloTabelaAranha = new DefaultTableModel();
        modeloTabelaAranha = (DefaultTableModel) tableAranha.getModel();
        modeloTabelaAranha.setRowCount(0);

        for (int i = 0; i < bancoAranha.getBdAranha().size(); i++) {
            try {
                aranha.setId(bancoAranha.getBdAranha().get(i).getId());
                aranha.setQuantidadeOlhos(bancoAranha.getBdAranha().get(i).getQuantidadeOlhos());
                aranha.setPeconhento(bancoAranha.getBdAranha().get(i).getPeconhento());
                aranha.setEspecie(bancoAranha.getBdAranha().get(i).getEspecie());
                aranha.setCor(bancoAranha.getBdAranha().get(i).getCor());
                aranha.getRegiao().setPais(bancoAranha.getBdAranha().get(i).getRegiao().getPais());
                aranha.getRegiao().setEstado(bancoAranha.getBdAranha().get(i).getRegiao().getEstado());
                aranha.setTeia(bancoAranha.getBdAranha().get(i).getTeia());
                aranha.setSubOrdem(bancoAranha.getBdAranha().get(i).getSubOrdem());
                aranha.setVeneno(bancoAranha.getBdAranha().get(i).getVeneno());
                aranha.setPernas(bancoAranha.getBdAranha().get(i).getPernas());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Tipo de não aceito", "Erro no cadastro", JOptionPane.ERROR_MESSAGE);
            } catch (OlhosException oe) {
                oe.avisoOlhos();
            } catch (SubOrdemException soe) {
                soe.avisoSubOrdem();
            }

            modeloTabelaAranha.insertRow(i, new Object[]{aranha.getId(), aranha.getEspecie(),
                aranha.getSubOrdem(), aranha.getQuantidadeOlhos(), aranha.getCor(),
                aranha.getRegiao().getPais(), aranha.getRegiao().getEstado(), aranha.getTeia(),
                aranha.getPeconhento(), aranha.getVeneno(), aranha.getPernas()});
        }
    }

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsultarActionPerformed
        consultarAranhaCodigo();
    }//GEN-LAST:event_botaoConsultarActionPerformed

    public void consultarAranhaCodigo() {
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                caixaId.setText(Integer.toString(aranha.getId()));
                caixaOlhos.setText(Integer.toString(aranha.getQuantidadeOlhos()));
                caixaPeconhento.setText(Boolean.toString(aranha.getPeconhento()));
                caixaEspecie.setText(aranha.getEspecie());
                caixaCor.setText(aranha.getCor());
                caixaPais.setText(aranha.getRegiao().getPais());
                caixaEstado.setText(aranha.getRegiao().getEstado());
                caixaTeia.setText(Boolean.toString(aranha.getTeia()));
                caixaSubOrdem.setText(aranha.getSubOrdem());
                caixaVeneno.setText(aranha.getVeneno());
                if (aranha.getTeia()) {
                    aranha.seda(aranha.getTeia());
                } else {
                    aranha.seda(aranha.getTeia());
                    aranha.seda();
                }
                aranha.cacar();
                if (aranha.getPeconhento()) {
                    aranha.peconhento(aranha.getVeneno());
                }
            } else {
                JOptionPane.showMessageDialog(null, " Não existe uma aranha com este ID!", "Erro ao consultar", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O ID deve ser um inteiro!", "Erro de ID", JOptionPane.ERROR_MESSAGE);
            caixaId.setText("");
            caixaId.requestFocus();
        }
    }

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        excluirAranhaCodigo();
    }//GEN-LAST:event_botaoExcluirActionPerformed

    public void excluirAranhaCodigo() {
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                caixaId.setText(Integer.toString(aranha.getId()));
                caixaOlhos.setText(Integer.toString(aranha.getQuantidadeOlhos()));
                caixaPeconhento.setText(Boolean.toString(aranha.getPeconhento()));
                caixaEspecie.setText(aranha.getEspecie());
                caixaCor.setText(aranha.getCor());
                caixaPais.setText(aranha.getRegiao().getPais());
                caixaEstado.setText(aranha.getRegiao().getEstado());
                caixaTeia.setText(Boolean.toString(aranha.getTeia()));
                caixaSubOrdem.setText(aranha.getSubOrdem());
                caixaVeneno.setText(aranha.getVeneno());
                int resp = JOptionPane.showConfirmDialog(null, "Confirmar exclusão?", "Excluir", JOptionPane.YES_NO_CANCEL_OPTION);
                if (resp == 0) {
                    bancoAranha.excluirAranha(aranha);
                    JOptionPane.showMessageDialog(null, "Aranha excluída", "Exclusão", 1);
                    caixaId.setText("");
                    caixaId.setText("");
                    caixaOlhos.setText("");
                    caixaPeconhento.setText("");
                    caixaEspecie.setText("");
                    caixaCor.setText("");
                    caixaPais.setText("");
                    caixaEstado.setText("");
                    caixaTeia.setText("");
                    caixaSubOrdem.setText("");
                    caixaVeneno.setText("");
                    caixaId.requestFocus();
                } else {
                    caixaId.setText("");
                    caixaId.setText("");
                    caixaOlhos.setText("");
                    caixaPeconhento.setText("");
                    caixaEspecie.setText("");
                    caixaCor.setText("");
                    caixaPais.setText("");
                    caixaEstado.setText("");
                    caixaTeia.setText("");
                    caixaSubOrdem.setText("");
                    caixaVeneno.setText("");
                    caixaId.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, " Não existe uma aranha com este ID!", "Erro de Consulta", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O ID deve ser um inteiro!", "Erro de ID", JOptionPane.ERROR_MESSAGE);
            caixaId.setText("");
            caixaId.requestFocus();
        }
    }

    private void botaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarActionPerformed
        aranha = new Aranha();
        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha = bancoAranha.consultaAranhaCodigo(aranha);
            if (aranha != null) {
                new AlteraAranha().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Não existe uma aranha com este ID!", "Erro", 1);
                caixaId.setText("");
                caixaOlhos.setText("");
                caixaPeconhento.setText("");
                caixaEspecie.setText("");
                caixaCor.setText("");
                caixaPais.setText("");
                caixaEstado.setText("");
                caixaTeia.setText("");
                caixaSubOrdem.setText("");
                caixaVeneno.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "O valor deve ser inteiro", "Erro", 1);
            caixaId.setText("");
            caixaOlhos.setText("");
            caixaPeconhento.setText("");
            caixaEspecie.setText("");
            caixaCor.setText("");
            caixaPais.setText("");
            caixaEstado.setText("");
            caixaTeia.setText("");
            caixaSubOrdem.setText("");
            caixaVeneno.setText("");
            caixaId.requestFocus();
        }
    }//GEN-LAST:event_botaoAlterarActionPerformed

    private void botaoInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoInserirActionPerformed
        new CadastroAranha().setVisible(true);
    }//GEN-LAST:event_botaoInserirActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        caixaId.setText("");
        caixaId.setText("");
        caixaOlhos.setText("");
        caixaPeconhento.setText("");
        caixaEspecie.setText("");
        caixaCor.setText("");
        caixaPais.setText("");
        caixaEstado.setText("");
        caixaTeia.setText("");
        caixaSubOrdem.setText("");
        caixaVeneno.setText("");
        caixaId.requestFocus();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void salvar() {
        aranha = new Aranha();

        try {
            aranha.setId(Integer.parseInt(caixaId.getText()));
            aranha.setQuantidadeOlhos(Integer.parseInt(caixaOlhos.getText()));
            aranha.setPeconhento(Boolean.parseBoolean(caixaPeconhento.getText()));
            aranha.setEspecie(caixaEspecie.getText());
            aranha.setCor(caixaCor.getText());
            aranha.getRegiao().setPais(caixaPais.getText());
            aranha.getRegiao().setEstado(caixaEstado.getText());
            aranha.setTeia(Boolean.parseBoolean(caixaTeia.getText()));
            aranha.setSubOrdem(caixaSubOrdem.getText());
            if (aranha.getPeconhento()) {
                aranha.setVeneno(caixaVeneno.getText());
            } else if (!aranha.getPeconhento() && !caixaVeneno.getText().equals("")) {
                aranha.peconhento(aranha.getPeconhento());
                caixaVeneno.setText("");
            }
            if (bancoAranha.consultaAranhaCodigo(aranha) == null) {
                bancoAranha.getBdAranha().add(aranha);
                showTableAranha(bancoAranha);
            } else {
                JOptionPane.showMessageDialog(null, "ID ja existe", "Erro", 0);
                caixaId.setText("");
                caixaId.requestFocus();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Tipo de dados não aceito", "Erro no cadastro", JOptionPane.ERROR_MESSAGE);
        } catch (OlhosException oe) {
            oe.avisoOlhos();
            caixaOlhos.setText("");
            caixaOlhos.requestFocus();
        } catch (SubOrdemException soe) {
            soe.avisoSubOrdem();
            caixaSubOrdem.setText("");
            caixaSubOrdem.requestFocus();
        }
    }

    private void botaoAbrirTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAbrirTabelaActionPerformed
        new JanelaTabelaAranha().showTableAranha(bancoAranha);
    }//GEN-LAST:event_botaoAbrirTabelaActionPerformed

    private void tableAranhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAranhaMouseClicked
        String componente1 = "";
        int i;
        //int coluna;
        int linha = tableAranha.getSelectedRow();

        for (i = 0; i < tableAranha.getColumnCount(); i++) {
            componente1 += tableAranha.getModel().getValueAt(tableAranha.getSelectedRow(), i).toString();
            if (i < (tableAranha.getColumnCount() - 1)) {
                componente1 += " - ";
            }
        }
        JOptionPane.showMessageDialog(null, "Aranha: " + componente1, "Aranha selecionada", 1);

    }//GEN-LAST:event_tableAranhaMouseClicked

    private void botaoAbrirListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAbrirListaActionPerformed
        new JanelaListaAranha().showListAranha(bancoAranha);
    }//GEN-LAST:event_botaoAbrirListaActionPerformed

    private void botaoAbrirComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAbrirComboActionPerformed
        new JanelaComboAranha().showComboAranha(bancoAranha);
    }//GEN-LAST:event_botaoAbrirComboActionPerformed

    private void menuInserirAranhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInserirAranhaActionPerformed
        new CadastroAranha().setVisible(true);
    }//GEN-LAST:event_menuInserirAranhaActionPerformed

    private void menuAlterarAranhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAlterarAranhaActionPerformed
        new AlteraAranha().setVisible(true);
    }//GEN-LAST:event_menuAlterarAranhaActionPerformed

    private void menuTabelaAranhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTabelaAranhaActionPerformed
        new JanelaTabelaAranha().showTableAranha(bancoAranha);
    }//GEN-LAST:event_menuTabelaAranhaActionPerformed

    private void menuListaAranhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListaAranhaActionPerformed
        new JanelaListaAranha().showListAranha(bancoAranha);
    }//GEN-LAST:event_menuListaAranhaActionPerformed

    private void menuComboAranhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComboAranhaActionPerformed
        new JanelaComboAranha().showComboAranha(bancoAranha);
    }//GEN-LAST:event_menuComboAranhaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
        new MenuEscorpiao().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void criarMenuAranha() {
        this.setVisible(true);
        //showTableAranha(bancoAranha);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAranha.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAranha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAbrirCombo;
    private javax.swing.JButton botaoAbrirLista;
    private javax.swing.JButton botaoAbrirTabela;
    private javax.swing.JButton botaoAlterar;
    private javax.swing.JButton botaoAtualizarTabela;
    private javax.swing.JButton botaoConsultar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoInserir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JTextField caixaCor;
    private javax.swing.JTextField caixaEspecie;
    private javax.swing.JTextField caixaEstado;
    private javax.swing.JTextField caixaId;
    private javax.swing.JTextField caixaOlhos;
    private javax.swing.JTextField caixaPais;
    private javax.swing.JTextField caixaPeconhento;
    private javax.swing.JTextField caixaSubOrdem;
    private javax.swing.JTextField caixaTeia;
    private javax.swing.JTextField caixaVeneno;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuAlterarAranha;
    private javax.swing.JMenuItem menuComboAranha;
    private javax.swing.JMenuItem menuInserirAranha;
    private javax.swing.JMenuItem menuListaAranha;
    private javax.swing.JMenuItem menuTabelaAranha;
    private javax.swing.JLabel rotuloCor;
    private javax.swing.JLabel rotuloEspecie;
    private javax.swing.JLabel rotuloEstado;
    private javax.swing.JLabel rotuloId;
    private javax.swing.JLabel rotuloImageAranha;
    private javax.swing.JLabel rotuloOlhos;
    private javax.swing.JLabel rotuloPais;
    private javax.swing.JLabel rotuloPeconhento;
    private javax.swing.JLabel rotuloSubOrdem;
    private javax.swing.JLabel rotuloTeia;
    private javax.swing.JLabel rotuloVeneno;
    private javax.swing.JTable tableAranha;
    // End of variables declaration//GEN-END:variables
}
